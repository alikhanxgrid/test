openapi: 3.0.3
info:
  title: WMS Scheduling API
  version: "1.0.0"
  description: >
    API endpoints for managing job sites, schedules, tasks, and attendance
    within the Warehouse Management System. This API supports:
    - Creating and retrieving job sites.
    - Creating schedules (with active/upcoming queries and overlap validation).
    - Creating and updating tasks.
    - Querying tasks by worker.
    - Recording and updating worker attendance.
servers:
  - url: /scheduling
    description: WMS Scheduling API Server

components:
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
      required:
        - error

    JobSite:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        location:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - location

    CreateJobSiteRequest:
      type: object
      properties:
        name:
          type: string
        location:
          type: string
      required:
        - name
        - location

    Schedule:
      type: object
      properties:
        id:
          type: string
        jobSiteId:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - jobSiteId
        - startDate
        - endDate

    CreateScheduleRequest:
      type: object
      properties:
        id:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
      required:
        - startDate
        - endDate

    ValidateScheduleRequest:
      type: object
      properties:
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
      required:
        - startDate
        - endDate

    Task:
      type: object
      properties:
        id:
          type: string
        scheduleId:
          type: string
        workerId:
          type: string
        name:
          type: string
        description:
          type: string
        plannedStartTime:
          type: string
          format: date-time
        plannedEndTime:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - PENDING
            - IN_PROGRESS
            - BLOCKED
            - COMPLETED
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - scheduleId
        - workerId
        - name
        - description
        - plannedStartTime
        - plannedEndTime
        - status

    CreateTaskRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        schedule_id:
          type: string
        worker_id:
          type: string
        planned_start_time:
          type: string
          format: date-time
        planned_end_time:
          type: string
          format: date-time
      required:
        - name
        - description
        - schedule_id
        - worker_id
        - planned_start_time
        - planned_end_time

    UpdateTaskStatusRequest:
      type: object
      properties:
        status:
          type: string
          enum:
            - PENDING
            - IN_PROGRESS
            - BLOCKED
            - COMPLETED
      required:
        - status

    AttendanceRecord:
      type: object
      properties:
        workerId:
          type: string
        jobSiteId:
          type: string
        date:
          type: string
          format: date
        checkInTime:
          type: string
          format: date-time
        checkOutTime:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - workerId
        - jobSiteId
        - date
        - checkInTime

    RecordAttendanceRequest:
      type: object
      properties:
        jobSiteId:
          type: string
        checkInTime:
          type: string
          format: date-time
      required:
        - jobSiteId
        - checkInTime

    UpdateAttendanceRequest:
      type: object
      properties:
        jobSiteId:
          type: string
        date:
          type: string
          format: date
        checkOutTime:
          type: string
          format: date-time
      required:
        - jobSiteId
        - date
        - checkOutTime

  parameters:
    JobSiteId:
      name: id
      in: path
      required: true
      schema:
        type: string
    WorkerId:
      name: workerID
      in: path
      required: true
      schema:
        type: string
    TaskId:
      name: id
      in: path
      required: true
      schema:
        type: string
    DateParam:
      name: date
      in: query
      required: false
      schema:
        type: string
        format: date

paths:
  /job-sites:
    post:
      summary: Create a new job site
      operationId: createJobSite
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobSiteRequest'
      responses:
        '201':
          description: Job site created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobSite'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /job-sites/{id}:
    get:
      summary: Retrieve a job site by ID
      operationId: getJobSite
      parameters:
        - $ref: '#/components/parameters/JobSiteId'
      responses:
        '200':
          description: Successful retrieval of job site
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobSite'
        '404':
          description: Job site not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /job-sites/{id}/schedules:
    post:
      summary: Create a new schedule for a job site
      operationId: createSchedule
      parameters:
        - $ref: '#/components/parameters/JobSiteId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScheduleRequest'
      responses:
        '201':
          description: Schedule created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Schedule conflict detected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Retrieve all schedules for a job site
      operationId: getSchedules
      parameters:
        - $ref: '#/components/parameters/JobSiteId'
      responses:
        '200':
          description: Schedules retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /job-sites/{id}/schedules/active:
    get:
      summary: Retrieve active schedules for a job site
      operationId: getActiveSchedules
      parameters:
        - $ref: '#/components/parameters/JobSiteId'
      responses:
        '200':
          description: Active schedules retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /job-sites/{id}/schedules/upcoming:
    get:
      summary: Retrieve upcoming schedules for a job site
      operationId: getUpcomingSchedules
      parameters:
        - $ref: '#/components/parameters/JobSiteId'
      responses:
        '200':
          description: Upcoming schedules retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /job-sites/{id}/schedules/validate:
    post:
      summary: Validate schedule overlap for a job site
      operationId: validateScheduleOverlap
      parameters:
        - $ref: '#/components/parameters/JobSiteId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateScheduleRequest'
      responses:
        '200':
          description: Schedule validated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
        '409':
          description: Schedule conflict detected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /schedules/{id}:
    get:
      summary: Retrieve a schedule by its ID
      operationId: getSchedule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Schedule retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '404':
          description: Schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /job-sites/{id}/tasks:
    post:
      summary: Create a new task for a job site
      operationId: createTask
      parameters:
        - $ref: '#/components/parameters/JobSiteId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  schedule_id:
                    type: string
                  worker_id:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tasks/{id}/status:
    put:
      summary: Update the status of a task
      operationId: updateTaskStatus
      parameters:
        - $ref: '#/components/parameters/TaskId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskStatusRequest'
      responses:
        '200':
          description: Task status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /workers/{id}/tasks:
    get:
      summary: Retrieve tasks for a worker on a specific date
      operationId: getWorkerTasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/DateParam'
      responses:
        '200':
          description: Tasks retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tasks/{id}:
    get:
      summary: Retrieve task details by ID
      operationId: getTask
      parameters:
        - $ref: '#/components/parameters/TaskId'
      responses:
        '200':
          description: Task details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /workers/{workerID}/attendance:
    post:
      summary: Record worker attendance (check-in)
      operationId: recordWorkerAttendance
      parameters:
        - $ref: '#/components/parameters/WorkerId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordAttendanceRequest'
      responses:
        '200':
          description: Attendance recorded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update worker attendance (check-out)
      operationId: updateWorkerAttendance
      parameters:
        - $ref: '#/components/parameters/WorkerId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAttendanceRequest'
      responses:
        '200':
          description: Attendance updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /job-sites/{id}/attendance:
    get:
      summary: Retrieve attendance records for a job site on a specific date
      operationId: getSiteAttendance
      parameters:
        - $ref: '#/components/parameters/JobSiteId'
        - $ref: '#/components/parameters/DateParam'
      responses:
        '200':
          description: Attendance records retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttendanceRecord'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'