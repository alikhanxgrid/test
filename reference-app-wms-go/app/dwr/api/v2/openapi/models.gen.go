// Package apiv2 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package apiv2

import (
	"time"
)

// Defines values for TaskStatus.
const (
	BLOCKED    TaskStatus = "BLOCKED"
	COMPLETED  TaskStatus = "COMPLETED"
	INPROGRESS TaskStatus = "IN_PROGRESS"
	PENDING    TaskStatus = "PENDING"
)

// BreakSignal defines model for BreakSignal.
type BreakSignal struct {
	IsOnBreak bool      `json:"isOnBreak"`
	StartTime time.Time `json:"startTime"`

	// WorkerId Unique identifier for a worker
	WorkerId WorkerID `json:"workerId"`
}

// CheckInRequest defines model for CheckInRequest.
type CheckInRequest struct {
	CheckInTime time.Time `json:"checkInTime"`
	Date        time.Time `json:"date"`
	JobSiteId   string    `json:"jobSiteId"`

	// WorkerId Unique identifier for a worker
	WorkerId WorkerID `json:"workerId"`
}

// CheckInResponse defines model for CheckInResponse.
type CheckInResponse struct {
	RunID      string `json:"runID"`
	WorkflowID string `json:"workflowID"`
}

// CheckOutRequest defines model for CheckOutRequest.
type CheckOutRequest struct {
	CheckOutTime time.Time `json:"checkOutTime"`
	Date         time.Time `json:"date"`
	JobSiteId    string    `json:"jobSiteId"`
	Notes        *string   `json:"notes,omitempty"`

	// WorkerId Unique identifier for a worker
	WorkerId WorkerID `json:"workerId"`
}

// Error defines model for Error.
type Error struct {
	// Error Error message
	Error string `json:"error"`
}

// GenericResponse defines model for GenericResponse.
type GenericResponse struct {
	Status string `json:"status"`
}

// TaskStatus Current status of a task
type TaskStatus string

// TaskUpdate defines model for TaskUpdate.
type TaskUpdate struct {
	// NewStatus Current status of a task
	NewStatus  TaskStatus `json:"newStatus"`
	Notes      *string    `json:"notes,omitempty"`
	TaskId     string     `json:"taskId"`
	UpdateTime time.Time  `json:"updateTime"`

	// UpdatedBy Unique identifier for a worker
	UpdatedBy WorkerID `json:"updatedBy"`
}

// WorkerID Unique identifier for a worker
type WorkerID = string

// SignalBreakJSONRequestBody defines body for SignalBreak for application/json ContentType.
type SignalBreakJSONRequestBody = BreakSignal

// WorkerCheckInJSONRequestBody defines body for WorkerCheckIn for application/json ContentType.
type WorkerCheckInJSONRequestBody = CheckInRequest

// WorkerCheckOutJSONRequestBody defines body for WorkerCheckOut for application/json ContentType.
type WorkerCheckOutJSONRequestBody = CheckOutRequest

// UpdateTaskProgressJSONRequestBody defines body for UpdateTaskProgress for application/json ContentType.
type UpdateTaskProgressJSONRequestBody = TaskUpdate
